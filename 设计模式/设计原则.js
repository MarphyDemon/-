// 单一职责原则
// 一个对象或函数只做一件事
// 优点:降低代码的复杂度，将代码拆分为小颗粒，易于理解
// 缺点:提升了编码难度

// 最少知识原则
// 在涉及你程序时，尽量减少对象之间的交互。如果两个对象之间不必彼此通信，那就不要有直接的相互联系。
// 通产引入第三者来解决这类问题。
// 优点：降低对象间的耦合性，提高复用性
// 确定：需要封装第三者来处理联系，有时第三者会复杂到难以维护
